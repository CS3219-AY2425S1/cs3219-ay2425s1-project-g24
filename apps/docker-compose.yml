services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - 3000:3000
    networks:
      - apps_network
    env_file:
      - ./frontend/.env
    volumes:
      - ./frontend:/frontend

  user-service:
    build:
      context: ./user-service
      dockerfile: Dockerfile
    ports:
      - 3001:3001
    networks:
      - apps_network
    env_file:
      - ./user-service/.env
    volumes:
      - ./user-service:/user-service

  question-service:
    build:
      context: ./question-service
      dockerfile: Dockerfile
    ports:
      - 8080:8080
      - 50051:50051
    env_file:
      - ./question-service/.env
    networks:
      - apps_network
    volumes:
      - ./question-service:/question-service

  matching-service:
    build:
      context: ./matching-service
      dockerfile: Dockerfile
    ports:
      - 8081:8081
    env_file:
      - ./matching-service/.env
    networks:
      - apps_network
    volumes:
      - ./matching-service:/matching-service
    depends_on:
      - redis

  history-service:
    build:
      context: ./history-service
      dockerfile: Dockerfile
    ports:
      - 8082:8082
    env_file:
      - ./history-service/.env
    networks:
      - apps_network
    volumes:
      - ./history-service:/history-service

  execution-service:
    build:
      context: ./execution-service
      dockerfile: Dockerfile
    ports:
      - 8083:8083
    env_file:
      - ./execution-service/.env
    networks:
      - apps_network
    volumes:
      - ./execution-service:/execution-service

  redis:
    image: redis:latest
    networks:
      - apps_network
    ports:
      - 6379:6379
    container_name: redis-container

networks:
  apps_network:
